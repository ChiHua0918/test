name: CI_CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  try:
    # runs-on: [self-hosted, linux]
    runs-on: ubuntu-latest
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checks-out your repository under $GITHUB_WORKSPAC
          uses: actions/checkout@v3

        # Runs a single command using the runners shell
        - name: Run a script
          run: ls

        # Runs a set of commands using the runners shell
        - name: Run a multi-line script
          run: |
            echo Simple test,
            echo it is well done.
  docker:
    runs-on: ubuntu-latest
    steps:
        - name: Checks-out your repository under $GITHUB_WORKSPAC
          uses: actions/checkout@v3
        - name: install docker
          run: run: sudo apt update && sudo apt install -y docker.io -e
          # run: echo "${{secrets.password}}" | sudo apt-get install docker.io -y
          
  # 在 docker 中建立一個 runner
  # build:
  #   runs-on: [self-hosted, linux]
  #   needs: docker
  #   # runs-on: ubuntu-latest
  #   steps:
  #       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #       - name: Checks-out your repository under $GITHUB_WORKSPAC
  #         uses: actions/checkout@v3

  #       - name: Login to GitHub Container Registry
  #         uses: docker/login-action@v2
  #         with:
  #           registry: ghcr.io
  #           username: ${{ github.actor }}
  #           password: ${{ secrets.GITHUB_TOKEN }}
            
  #       - name: install package
  #         run: pip install -r ./flask/requirements.txt

  #       # - name: test input a name string
  #       #   run: python3 test.py Amber
  #       # - name: install docker
  #         # run: sudo apt install docker.io

  #       # - name: login in docker hub
  #       #   # run: |
  #       #     # docker login -u ${secrets.DOCKERHUB_USERNAME} -p ${secrets.DOCKERHUB_TOKEN}
  #       #   uses: docker/login-action@v2
  #       #   with:
  #       #     username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       #     password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       - name: build docker
  #         run: docker build -t flask .

  #       - name: see all the images
  #         run: docker images

  # deploy:
  #   needs: deploy to container
  #   runs-on: [self-hosted, linux]
  #   steps:
  #     - name: run the docker image
  #       run: docker-compose up