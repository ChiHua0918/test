# This is a basic workflow to help you get started with Actions

name: CI_CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: [self-hosted, linux]
    # runs-on: ubuntu-latest
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checks-out your repository under $GITHUB_WORKSPAC
          uses: actions/checkout@v3

        # Runs a single command using the runners shell
        - name: Run a script
          run: ls

        # Runs a set of commands using the runners shell
        - name: Run a multi-line script
          run: |
            echo Simple test,
            echo it is well done.
  build:
    runs-on: [self-hosted, linux]
    # runs-on: ubuntu-latest
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checks-out your repository under $GITHUB_WORKSPAC
          uses: actions/checkout@v3

        - name: install package
          run: pip install -r ./flask/requirements.txt
        
        # - name: test input a name string
        #   run: python3 test.py Amber
        # - name: install docker
          # run: sudo apt install docker.io
        # - name: change user permissions
        #   run: sudo chmod 666 /var/run/docker.sock
        #   with: 
        #     password: ${{ secrets.PASSWD }}
        # - name: login in docker hub
        #   # run: |
        #     # docker login -u ${secrets.DOCKERHUB_USERNAME} -p ${secrets.DOCKERHUB_TOKEN}
        #   uses: docker/login-action@v2
        #   with:
        #     username: ${{ secrets.DOCKERHUB_USERNAME }}
        #     password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        - name: build docker
          run: docker build -t flask .

        - name: see all the image
          run: docker images
  deploy_to_docker_hub:
    needs: build
    runs-on: [self-hosted, linux]
    steps:
      - name: run the docker image
        run: docker-compose up
